
{% extends 'adminBase.html.twig' %}

{% block title %}
    Resultater {{ survey.name }} {{ survey.semester }}
{% endblock %}

{% block scripts %}
    {{ parent() }}
    <!--suppress ALL -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.min.js"></script>
{% endblock %}

{% block body %}
    <div class="row">
        <div class="small-12 medium-12 large-12 columns">
            <h1 style="text-align: center;">Resultater {{ survey.name }} {{ survey.semester }}</h1>
            {% if numAnswered == 0 %}
                <h4 style="text-align: center; color: #750000">Ingen har svart på undersøkelsen</h4>
            {% endif %}
        </div>
    </div>

    <div class="row" id="allCharts">
    </div>

    {% if numAnswered > 0 %}
    <div class="row">
        <div id="survey-data" class="large-12 columns">
            <script type="text/javascript" src="https://www.google.com/jsapi"></script>
            <script type="text/javascript">
                google.load("visualization", "1", {packages: ["corechart", 'table', 'treemap', 'gauge']});
                google.load('jquery', '1.6.0');
            </script>

            <div class="row" style="width: 750px; margin: 0 auto;">
                {% for chart in diagram %}
                    {% set index = loop.index %}
                    <div id="{{ index }}">&nbsp;</div>
                    <script>
                        $(function () {
                            {{ gchart_pie_chart(chart, index, 750, 250, attribute(question, index - 1)) }}
                        });
                    </script>
                    <hr style="width: 750px;"/>
                {% endfor %}

            </div>
            <div class="row">
                <h3 style="text-align: center;">Tekstsvar</h3>
                {% for key in textAnswers|keys %}
                    <h4>{{ key }}</h4>
                    {% for answer in textAnswers[key] %}
                        <p>{{ loop.index }}: {{ answer }}</p>
                    {% endfor %}
                {% endfor %}
            </div>
        </div>
    </div>
        {% endif %}
{% endblock %}

{% block javascripts %}
<script>
    function getRandomColor() {
        var letters = '0123456789ABCDEF'.split('');
        var color = '#';
        for (var i = 0; i < 6; i++ ) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    }

    Chart.defaults.global.animation = false;

    var colors = ["#F3595D", "#78C466", "#579AD6", "#FCA853", "#9F65AD", "#D07054", "#D97DB5","#737373"];

    $.getJSON('{{ path('survey_get_all_results', {'id': survey.id } ) }}',function(surveyData){
        renderFilter(surveyData);
        var countedData = countAnswers(surveyData);
        var chartData = generateChartData(surveyData, countedData);
        renderCharts(surveyData, chartData);
    });


    function renderFilter(surveyData){
        var filterDiv = $('<div></div>');
        filterDiv.addClass('small-12 medium-12 large-12 columns');
        var filter = {};
        for(var i = 0; i< surveyData.survey.questions.length; i++){
            var filterList = $('<select multiple></select>');
            filterList.attr('id',surveyData.survey.questions[i].question_id.toString());
            //console.log(surveyData.survey.questions[i].alternatives);

            for(var j = 0; j < surveyData.survey.questions[i].alternatives.length; j++){


                var filterOption = $('<option></option>');
                filterOption.attr('value', surveyData.survey.questions[i].alternatives[j]);
                filterOption.append(surveyData.survey.questions[i].alternatives[j]);
                filterList.append(filterOption);
            }

            filterDiv.append(filterList);
        }


        var btn = $('<button></button>');
        btn.html('Filtrer');
        btn.on('click', function(){
            var filterObjects = [];
            filterDiv.find('select').each( function (){
                var selectedAnswers = $(this).find(":selected");
                if(selectedAnswers.length){
                    var filterObject = {
                        question_id: $(this).attr('id'),
                        answers: []
                    }
                    selectedAnswers.each( function(){
                        filterObject.answers.push($(this).text());
                    })
                    filterObjects.push(filterObject);
                }
            })
            filterSurveyData(filterObjects);
        });
        filterDiv.append(btn);
        $('#allCharts').append(filterDiv);
    }

    function generateChartData(surveyData, countedData){
        var chartData = [];
        for(var i = 0; i< surveyData.survey.questions.length; i++) {
            var questionData = [];
            for (var j = 0; j < surveyData.survey.questions[i].alternatives.length; j++) {
                questionData.push({
                    label: surveyData.survey.questions[i].alternatives[j],
                    value: countedData[surveyData.survey.questions[i].question_id][surveyData.survey.questions[i].alternatives[j]],
                    color: j >= colors.length ? getRandomColor() : colors[j]
                });
            }
            chartData.push(questionData);
        }
        return chartData;
    }

    function countAnswers(surveyData){
        var data = {};
        for(var i = 0; i < surveyData.survey.questions.length; i++){
            data[ surveyData.survey.questions[i].question_id.toString() ] = {};
            for(var j = 0; j < surveyData.survey.questions[i].alternatives.length; j++){
                data[ surveyData.survey.questions[i].question_id.toString() ][surveyData.survey.questions[i].alternatives[j]] = 0;
            }
        }
        for(var k = 0; k< surveyData.answers.length; k++){
            for(var l = 0; l < surveyData.answers[k].length; l++){
                data[surveyData.answers[k][l].question_id][surveyData.answers[k][l].answer]++;
            }
        }
        return data;
    }

    function renderCharts(surveyData, chartData){

        for(var i = 0; i< surveyData.survey.questions.length; i++){
            //console.log(chartData);
            var div = $('<div></div>');
            div.addClass('small-12 medium-12 large-12 columns');
            var canvas = $('<canvas/>').width(400).height(300);

            div.append(canvas);

            $('#allCharts').append(div);

            ctx = canvas.get(0).getContext("2d");
            var myNewChart = new Chart(ctx).Pie(chartData[i]);

            div.append($(myNewChart.generateLegend()));
            div.append($('<hr>'));
        }
    }

    function filterSurveyData(surveyData, filterObjects){

    }

</script>
{% endblock %}
